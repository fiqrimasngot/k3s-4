---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  releaseName: home-assistant
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
    imagePullSecrets:
    - name: regcred
    image:
      repository: homeassistant/home-assistant
      tag: 2022.4.7
    persistence:
      config:
        enabled: true
        existingClaim: homeassistant-pvc
    extraEnv:
      TZ: "${TIMEZONE}"
    # envFrom:
    # - secretRef:
    #     name: home-assistant-secrets
    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        annotations:
          # kubernetes.io/ingress.class: "nginx-external"
        hosts:
        - host: &host "ha.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - *host
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${HOME_ASSISTANT_ADDRESS}"
        externalIPs:
        - "${HOME_ASSISTANT_ADDRESS}"
        externalTrafficPolicy: Local
    mariadb:
      enabled: false
    postgresql:
      enabled: true
      # diagnosticMode:
      #   enabled: true
      # image:
      #   tag: 12.9.0
      existingSecret: home-assistant-postgresql-secret
      persistence:
        enabled: true
        existingClaim: homeassistant-postgres-pvc
    addons:
      codeserver:
        imagePullSecrets:
        - name: regcred
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.3.0
        workingDir: "/config"
        #TODO: Eventually add a git secret here
        # git:
        #   deployKeySecret: home-assistant-code-server-secret
        env:
          password: ${SECRET_CODESERVER_PASSWORD}
        args:
        - --auth
        - "none"
        - --user-data-dir
        - "/config/.vscode"
        - --extensions-dir
        - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "internal"
          annotations:
            # kubernetes.io/ingress.class: "nginx-internal"
            # nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
            # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start"
          hosts:
          - host: &host1 "ha-vscode.${SECRET_DOMAIN}"
            paths:
            - path: /
              pathType: Prefix
          tls:
          - hosts:
            - *host
        volumeMounts:
        - name: config
          mountPath: /config
    # podAnnotations:
    #   secret.reloader.stakater.com/reload: home-assistant-secrets
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - {key: "feature.node.kubernetes.io/custom-tplink-bluetooth", operator: In, values: ["true"]}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassistant-pvc
  namespace: home
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassistant-postgres-pvc
  namespace: home
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Mi