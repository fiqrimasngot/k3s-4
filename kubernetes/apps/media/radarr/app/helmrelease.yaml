apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: radarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/onedr0p/radarr
      tag: 5.0.3.8127
    env:
      TZ: "${TIMEZONE}"
    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        # annotations:
        #   nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.networking.svc.cluster.local/oauth2/auth"
        #   nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/sign_in"
        #   external-dns/is-public: "true"
        #   external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        storageClass: nfs-kube
      media:
        enabled: true
        existingClaim: nfs-media-pvc
    podSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001
    resources:
      requests:
        memory: 350Mi
        cpu: 25m
      limits:
        memory: 500Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: movies
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 100Gi
  nfs:
    path: "/mnt/lab-pool/k3s-nfs/Movies"
    server: "10.32.1.5"
  storageClassName: movies
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: movies
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: movies
  volumeMode: Filesystem